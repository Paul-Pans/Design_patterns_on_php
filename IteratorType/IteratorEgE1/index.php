<?php
namespace IteratorEgE1;
include_once 'autoload.php';


echo "Итератор - поведенческий шаблон проектирования. Представляющий собой объект
, позволяющий получить последовательный доступ к элементам объекта-агрегата без
использования описания каждого из агрегированных объектов.
<br><br>
Например, такие элементы как дерево, связанный список, хеш-таблицы и массив могут
быть пролистаны (и модифицированы) с помощью объекта Итератор.
<br><br>
Перебор элементов выполняется объектом итератора, а не самой коллекцией.
Это упрощает интерфейс и реализацию коллекции, а также способствует более логичному
разделению обязанностей.
<br><br>
Особенностью полноценно реализованного итератора является то, что код, использующий итератор,
может ничего не знать о типе итерируемого агрегата.
<br><br>
Конечно же, (в С++) почти в любом агрегате можно выполнять итерации указателем void*, но при этом:

не ясно, что является значением «конец агрегата», для двусвязного списка это &ListHead,
 для массива это &array[size], для односвязного списка это NULL
операция Next сильно зависит от типа агрегата.
Итераторы позволяют абстрагироваться от типа и признака окончания агрегата,
используя полиморфный Next (часто реализованный как operator++ в С++) и полиморфный aggregate.end(),
возвращающий значение «конец агрегата».

Таким образом, появляется возможность работы с диапазонами итераторов, при отсутствии
 знания о типе итерируемого агрегата.
<i>[Электронный ресурс]: Википедия. Свободная энциклопедия.</i>
<br><br><br>";

/**
 * Клиентский код может знать или не знать о Конкретном Итераторе или классах
 * Коллекций, в зависимости от уровня косвенности, который вы хотите сохранить в
 * своей программе.
 */

$collection = new WordsCollection();
$collection->addItem('First');
$collection->addItem('Second');
$collection->addItem('Third');

echo "Прямой обход: <br>";
foreach ($collection->getIterator() as $item){
    echo $item . "<br>";
}

echo "<br><br>";
echo "Обратный обход <br>";
foreach ($collection->getReverseIterator() as $item){
  echo $item . "<br>";
}


?>
