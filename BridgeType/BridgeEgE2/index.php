<?php
namespace BridgeEgE2;
include_once 'autoload.php';

echo "Шаблон мост (англ. Bridge) — структурный шаблон проектирования, используемый в проектировании программного обеспечения
чтобы «разделять абстракцию и реализацию так, чтобы они могли изменяться независимо».
Шаблон мост использует инкапсуляцию, агрегирование и может использовать наследование для того,
 чтобы разделить ответственность между классами.

 При частом изменении класса преимущества объектно-ориентированного подхода становятся очень полезными,
 позволяя делать изменения в программе, обладая минимальными сведениями о реализации программы.
 Шаблон bridge является полезным там, где часто меняется не только сам класс,
 но и то, что он делает.
 <i>[Электронный ресурс]: Википедия. Свободная энциклопедия.</i>


 Не путать абстракции с абстракцией в языке программирования.
<br><br><br>";

$t = new testclass();
echo $t->test();

/**
 * За исключением этапа инициализации, когда объект абстракции связывается с
 * определенным объектом Реализации, клиентский код должен зависеть только от
 * класса Абстракции. Таким образом, клиенский код может поддержать любую
 * комбинации абстракции и реализации.
 */

function clientCode(Abstraction $abstraction)
{

    echo $abstraction->operation();
}

/**
 * Клиенстский код должен работать с любой предварительно сконфигурированной
 * комбинацией абстракции и реализации
 */
$implementation = new ImplementationComponentA();
$abstraction = new Abstraction($implementation);
clientCode($abstraction);

$implementation = new ImplementationComponentB();
$abstraction = new ExtendAbstraction($implementation);
clientCode($abstraction);
?>
